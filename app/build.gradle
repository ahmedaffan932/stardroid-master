apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.google.android.stardroid"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1524
        versionName "1.9.7 - RC1"
        buildConfigField 'String', 'GOOGLE_ANALYTICS_CODE', '""'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }

    signingConfigs {
        release {
            if (project.file('no-checkin.properties').exists()) {
                Properties properties = new Properties()
                // Sky Map devs should create this file with the signing passwords
                properties.load(project.file('no-checkin.properties').newDataInputStream())
                storeFile file("stardroid-release-key.keystore")
                storePassword properties.getProperty('store-pwd')
                keyPassword properties.getProperty('key-pwd')
                keyAlias "stardroid"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            if (file('no-checkin.properties').exists()) {
                signingConfig signingConfigs.release
                Properties properties = new Properties()
                // Sky Map devs should create this file with the Google Analytics key
                properties.load(project.file('no-checkin.properties').newDataInputStream())
                def analyticsKey = properties.getProperty('analytics-key')
                buildConfigField 'String', 'GOOGLE_ANALYTICS_CODE', analyticsKey
            }
        }
    }

    lintOptions {
        // Lint complains because of missing translations.
        // (Missing translations now removed)
        abortOnError false
    }

    // This enables long timeouts required on slow environments, e.g. Travis
    adbOptions {
        timeOutInMs 10 * 60 * 1000  // 10 minutes
        installOptions "-d", "-t"
    }
    
    testOptions {
        animationsDisabled = true
    }

    flavorDimensions "default"
    productFlavors {
        // includes gms Google services
        gms {
            resValue "string", "analytics_enabled", "true"
        }

        // uses only open source software
        fdroid {
            resValue "string", "analytics_enabled", "false"
        }
    }
}

dependencies {
    implementation project(path: ':datamodel')

// Android support
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.preference:preference:1.1.1'

// Third-party
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.google.dagger:dagger:2.28.3'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation project(path: ':country_data')
    implementation project(path: ':country_data')
    annotationProcessor 'com.google.dagger:dagger-compiler:2.28.3'
    // For annotations not in Android but needed by Dagger
//    implementation 'javax.annotation:jsr250-api:1.0'
    // Lite version for Android - it's lighter (obviously) but also doesn't use reflection
    // which can cause no end of problems with minifiers like proguard.

    //implementation 'com.google.protobuf:protobuf-javalite:3.13.0'
    implementation 'com.google.protobuf:protobuf-java:3.15.2'


// Flavor
    gmsImplementation 'com.google.android.gms:play-services-analytics:17.0.1'
    gmsImplementation 'com.google.android.gms:play-services-location:18.0.0'
    gmsImplementation 'com.google.firebase:firebase-analytics:19.0.1'

// Testing
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation 'org.easymock:easymock:2.5.2'
    testImplementation 'com.google.truth:truth:1.0.1';
    androidTestImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'org.easymock:easymock:2.5.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "androidx.core:core-ktx:+"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Optional -- UI testing with UI Automator
    // androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'


    //GPS Toolbox libraries.
    implementation 'gov.nasa.worldwind.android:worldwind:0.8.0'

    implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:9.2.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-locationlayer:0.5.0'
    implementation "com.mapbox.mapboxsdk:mapbox-android-telemetry:6.1.0"
    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-places-v9:0.12.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-building-v9:0.7.0'

    implementation 'androidmads.library.qrgenearator:QRGenearator:1.0.4'
    implementation 'com.google.zxing:core:3.3.2'

    implementation "androidx.camera:camera-view:1.0.0-alpha29"
    implementation 'androidx.camera:camera-camera2:1.1.0-alpha09'
    implementation "androidx.camera:camera-lifecycle:1.1.0-alpha09"

    implementation 'com.google.photos.library:google-photos-library-client:1.7.0'

    implementation 'com.intuit.sdp:sdp-android:1.0.6'

    implementation 'com.google.android.gms:play-services-location:18.0.0'

    implementation 'com.github.arbelkilani:Compass-View:v1.1.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

}
repositories {
    mavenCentral()
}
